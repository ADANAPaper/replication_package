id,text_to_show
26208,"private void openBook() {     File file = new File(mRealPath);     Uri path = Uri.fromFile(file);     Intent intent = new Intent(Intent.ACTION_VIEW);     intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);     intent.setDataAndType(path, getString(R.string.application_type));     try {         startActivity(intent);     } catch (ActivityNotFoundException e) {         Toast.makeText(FirstTab.this,          getString(R.string.no_application_found),          Toast.LENGTH_SHORT).show();     }};"
30697,"getListView().setOnCreateContextMenuListener(new OnCreateContextMenuListener() {                @Override                public void onCreateContextMenu(ContextMenu menu, View v,                        ContextMenuInfo menuInfo) {                    menu.setHeaderTitle(Options);                    menu.add(Option1);                    menu.add(Option2);                    menu.add(Option3);                }            });;"
33717,"ConnectivityManager mgr = (ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);Method dataMtd = ConnectivityManager.class.getDeclaredMethod(setMobileDataEnabled, boolean.class);dataMtd.setAccessible(true);dataMtd.invoke(mgr, true/false);;"
37361,"WindowManager.LayoutParams lp = dialog.getWindow().getAttributes();/** set the dim amount of the settings activity */lp.dimAmount = 0.5f;dialog.getWindow().setAttributes(lp);;"
40785,"webview.setWebViewClient(new WebViewClient(){    public boolean shouldOverrideUrlLoading(WebView view, String url) {             //if the url is your popup url             //show the popup             //if you want the web view to load the url return false; else return true;                          //by default return false btw!       } });;"
45242,"TelephonyManager telephonyManager = (TelephonyManager)getSystemService(Context.TELEPHONY_SERVICE);String id =  (getDeviceID1(telephonyManager));;String android_id = Secure.getString(getContext().getContentResolver(),                                                Secure.ANDROID_ID);;private BluetoothAdapter mBtAdapter;// Get the local Bluetooth adaptermBtAdapter = BluetoothAdapter.getDefaultAdapter();String deviceMacAddress = mBtAdapter.getAddress();;"
46810,"ContentValues values = new ContentValues();values.put(<COLUMN_NAME>, (String) null);database.update(<TABLE_NAME>, values, null, null);;"
47481,"public void onActivityCreated(Bundle savedInstanceState)    {            super.onActivityCreated(savedInstanceState);        getListView().setOnItemClickListener(new OnItemClickListener()        {            public void onItemClick(AdapterView<?> parent, View view, int pos,                    long id)             {                Intent myIntent = new Intent(getActivity().getBaseContext(), Profile.class);                startActivity(myIntent);                        }               });    };"
48970,"alpha = new AlphaAnimation(0.3F, 0.3F); //Set opacity - Range 0.0 to 1.0alpha.setDuration(0); // Set animation durationalpha.setFillAfter(true); // Maintaining the effect to the buttonyourButton.startAnimation(alpha);;"
51955,"if (Build.VERSION.SDK_INT > Build.VERSION_CODES.HONEYCOMB) {getWindow().setFlags(                    WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED,                    WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED);    (your view)view.setLayerType(View.LAYER_TYPE_SOFTWARE, null);    };"
55387,"final NumberFormat nf = NumberFormat.getInstance();nf.setMinimumFractionDigits(2);nf.setMaximumFractionDigits(2);nf.setGroupingUsed(false);System.out.println(nf.format(123456789.123456789));;"
56910,"public String getPath(Uri uri) {            String[] projection = { MediaStore.Audio.Media.DATA };            Cursor cursor = managedQuery(uri, projection, null, null, null);            int column_index = cursor.getColumnIndexOrThrow(MediaStore.Audio.Media.DATA);            cursor.moveToFirst();            return cursor.getString(column_index);        };mpath = getPath(data.getData());;"
57598,"if(mWebview.getUrl().contains(.mp3) { Request request = new Request(                        Uri.parse(url));                request.allowScanningByMediaScanner();                request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED);                request.setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, download); // You can change the name of the downloads, by changing download to everything you want, such as the mWebview title...                DownloadManager dm = (DownloadManager) getSystemService(DOWNLOAD_SERVICE);                dm.enqueue(request);            };"
57849,"btn.setTag(textView.getText().toString());btn.setOnClickListener(new View.OnClickListener() {    @Override    public void onClick(View v) {        // TODO Auto-generated method stub        String s =(String)v.getTag();    }});;"
57867,"private void setUpMapIfNeeded() {        // Do a null check to confirm that we have not already instantiated the map.if (googleMap==null) {  //-- DONT FORGET THIS!!            googleMap = ((SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map)).getMap();                     // Check if we were successful in obtaining the map.if (googleMap!=null) {                setUpMap();            }        }    };"
59916,"private static float scale = 0;...public static int dps2pixels(int dps, Context context) {    if (0 == scale) {        scale = context.getResources().getDisplayMetrics().density;    }    return (int) (dps * scale + 0.5f);};"
60015,"AlertDialog.Builder alert = new AlertDialog.Builder(YOUR_CONTEXT);    AlertDialog dialog = alert.create();    // Positive    dialog.getButton(DialogInterface.BUTTON_POSITIVE).setTextSize(THE_SIZE);    // Negative    dialog.getButton(DialogInterface.BUTTON_NEGATIVE).setTextSize(THE_SIZE);;"
62261,"SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(YourActivityName.this);Editor edit1 = remembermepref.edit();            edit1.putInt(totalbalance_key,totalBalance);            edit1.commit();;SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(YourActivityName.this);int totalbalance = pref.getInt(totalbalance_key);;"
68792,"String[] mProjection =         {                MediaStore.Audio.Artists._ID,                MediaStore.Audio.Artists.ARTIST,                MediaStore.Audio.Artists.NUMBER_OF_TRACKS,                MediaStore.Audio.Artists.NUMBER_OF_ALBUMS         };Cursor artistCursor = mContentResolver.query(                MediaStore.Audio.Artists.EXTERNAL_CONTENT_URI,                mProjection,                null,                null,                MediaStore.Audio.Artists.ARTIST +  ASC);;"
69293,"URL url = new URL(http://www.yourdomain/your/path/image.jpg);HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setDoInput(true);connection.connect();final InputStream input = connection.getInputStream();Bitmap yourpic = BitmapFactory.decodeStream(input);;"
70519,"for (int x = 0; i < string.length; x++) {        Button word = new Button(context);        word.setText(string[x]+);        LinearLayout.LayoutParams left_on = new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT,1);        word.setLayoutParams(left_on);        myLinearLayout.addView(word);    };"
78103,"Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);    setSupportActionBar(toolbar);    toolbar.setTitleTextColor(getResources().getColor(R.color.white));;"
78678,"IntentFilter ifilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);Intent batteryStatus = context.registerReceiver(null, ifilter);int level = batteryStatus.getIntExtra(BatteryManager.EXTRA_LEVEL, -1);int scale = batteryStatus.getIntExtra(BatteryManager.EXTRA_SCALE, -1);float batteryPct = level / (float)scale;;"
80136,"LinearLayout layout = (LinearLayout)findViewById(R.id.ll);LayoutParams params = (LayoutParams) layout.getLayoutParams();params.height = 100;params.width = 100;;"
81301,"public static Bitmap getBitmap(String photoPath){        BitmapFactory.Options options = new BitmapFactory.Options();        options.inPreferredConfig = Bitmap.Config.ARGB_8888;        options.inSampleSize = 16;        return BitmapFactory.decodeFile(photoPath, options);};"
82024,"Display display = getWindowManager().getDefaultDisplay();Point size = new Point();display.getSize(size);int width = size.x;int height = size.y;;DisplayMetrics displaymetrics = new DisplayMetrics();getWindowManager().getDefaultDisplay().getMetrics(displaymetrics);int height = displaymetrics.heightPixels;int wwidth = displaymetrics.widthPixels;;layout-sw600dp/ < thats a 7 like the Nexus 7layout-sw720dp/ < thats a 10 like the Nexus 10;"
83652,"LinearLayout linear = (LinearLayout) findViewById(R.id.linearlayout2);TextView tv = new TextView(this);tv.setText(Text here);tv.setId(id);linear.addView(tv);;"
84783,"ActivityManager am = (ActivityManager) this.getSystemService(ACTIVITY_SERVICE);List<RunningTaskInfo> taskInfo = am.getRunningTasks(1);ComponentName componentInfo = taskInfo.get(0).topActivity;Log.d(WebServiceHelper.TAG, CURRENT Activity :: + taskInfo.get(0).topActivity.getClassName()+   Package Name :  +componentInfo.getPackageName());;"
88731,"public View getGroupView(int groupPosition, boolean isExpanded,        View convertView, ViewGroup parent) {...    if (isExpanded) {        groupHolder.img.setImageResource(R.drawable.group_down);    } else {        groupHolder.img.setImageResource(R.drawable.group_up);    }...};"
93828,"Intent intent = new Intent(Intent.ACTION_SENDTO);intent.setData(Uri.parse(mailto:));intent.putExtra(Intent.EXTRA_EMAIL, addresses);intent.putExtra(Intent.EXTRA_SUBJECT, subject);;Intent chooser = Intent.createChooser(intent, Chooser title);;if(intent.resolveActivity(getPackageManager()) != null){    // there are apps, start the chooser    startActivity(chooser);} else {    // no apps found    Toast.makeText(this, No apps found, Toast.LENGTH_SHORT).show();};"
94606,"NavigationView mNavigationView = (NavigationView) findViewById(R.id.navigation_view);    View headerLayout = mNavigationView.inflateHeaderView(R.layout.my_header_layout);// Now you can update the views in your header as you want :TextView version = (TextView) headerLayout.findViewById(R.id.version);version.setText(text in my header);;"
95099,"Uri uri = ContactsContract.Contacts.CONTENT_URI;uri = Uri.withAppendedPath(uri, 1); // 1 is contact idIntent intent = new Intent(Intent.ACTION_VIEW, uri);startActivity(intent);;"
97892,"public class MainActivity extends AppCompatActivity implements ListView.OnItemClickListener,View.OnClickListener{    @Override    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {         // handle listview on item click    }    @Override    public void onClick(View view){         switch (view.getId()){                    //handle multiple view click events         }    }};"
98343,"GridLayoutManager manager = new GridLayoutManager(getActivity(), 6);        manager.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {            @Override            public int getSpanSize(int position) {                // return your span size as per your layout type.return 6;                }            }        });;"
105196,"PendingIntent pi;AlarmManager mgr;mgr = (AlarmManager)ctx.getSystemService(Context.ALARM_SERVICE);Intent i = new Intent(DataCollectionActivity.this, HUJIDataCollectionService.class);    pi = PendingIntent.getService(DataCollectionActivity.this, 0, i, 0);mgr.setRepeating(AlarmManager.ELAPSED_REALTIME_WAKEUP, SystemClock.elapsedRealtime() , 1000, pi);;"
105380,"@Overridepublic void onCreate(Bundle savedInstanceState) {    super.onCreate(savedInstanceState);    setContentView(R.layout.your_layout);    getWindow().setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);};"
105471,"@Overridepublic void onCreate(Bundle savedInstanceState) {    super.onCreate(savedInstanceState);    this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);;"
108117,"int TIMEOUT_MILLISEC = 10000;  // = 10 secondsString postMessage={}; //HERE_YOUR_POST_STRING.HttpParams httpParams = new BasicHttpParams();HttpConnectionParams.setConnectionTimeout(httpParams, TIMEOUT_MILLISEC);HttpConnectionParams.setSoTimeout(httpParams, TIMEOUT_MILLISEC);HttpClient client = new DefaultHttpClient(httpParams);HttpPost request = new HttpPost(serverUrl);request.setEntity(new ByteArrayEntity(    postMessage.toString().getBytes(UTF8)));HttpResponse response = client.execute(request);;"
113623,"String LINK = http://youtu.be/RFrg1xFoxeQ;setContentView(R.layout.mediaplayer);VideoView videoView = (VideoView) findViewById(R.id.video);MediaController mc = new MediaController(this);mc.setAnchorView(videoView);mc.setMediaPlayer(videoView);Uri video = Uri.parse(LINK);videoView.setMediaController(mc);videoView.setVideoURI(video);videoView.start();;"
116007,"ProgressBar mProgressBar=(ProgressBar)findViewById(R.id.progress_bar);;mProgressBar.setVisibility(View.VISIBLE);;mProgressBar.setVisibility(View.INVISIBLE);;"